syntax = "proto3";

package infraboard.mflow.approval;
option go_package = "github.com/infraboard/mflow/apps/approval";

import "mcube/pb/request/request.proto";
import "mcube/pb/resource/meta.proto";
import "mcube/pb/resource/label.proto";
import "mcube/pb/page/page.proto";
import "mflow/apps/approval/pb/approval.proto";

// RPC 服务构建配置
service RPC {
	// 创建发布申请
	rpc CreateApproval(CreateApprovalRequest) returns(Approval);
	// 查询发布申请列表
	rpc QueryApproval(QueryApprovalRequest) returns(ApprovalSet);
	// 查询发布申请详情
	rpc DescribeApproval(DescribeApprovalRequest) returns(Approval);
	// 编辑发布申请
	rpc EditApproval(EditApprovalRequest) returns(Approval);
	// 更新发布申请状态
	rpc UpdateApprovalStatus(UpdateApprovalStatusRequest) returns(Approval);
}

message QueryApprovalRequest {
    // 资源范围
    // @gotags: json:"scope"
    mcube.resource.Scope scope = 1;
    // 资源标签过滤
    // @gotags: json:"filters"
    repeated mcube.resource.LabelRequirement filters = 2;
    // 分页请求
    // @gotags: json:"page"
    mcube.page.PageRequest page = 3;
    // Id列表
    // @gotags: json:"ids"
    repeated string ids = 4;
    // 创建开始时间
    // @gotags: json:"begin_create_at"
    int64 begin_create_at = 5;
    // 创建结束时间
    // @gotags: json:"end_create_at"
    int64 end_create_at = 6;
}

message DescribeApprovalRequest {
    // 对象Id
    // @gotags: json:"id" validate:"required"
    string id = 1;
}

message EditApprovalRequest {
    // 对象Id
    // @gotags: json:"id" validate:"required"
    string id = 1;
    // 更新模式
    // @gotags: json:"update_mode"
    infraboard.mcube.request.UpdateMode update_mode = 2;
    // 对象Id
    // @gotags: json:"spec"
	CreateApprovalRequest spec = 3;
}

message UpdateApprovalStatusRequest {
    // 对象Id
    // @gotags: json:"id" validate:"required"
    string id = 1;
    // 修改人
    // @gotags: json:"update_by" validate:"required"
    string update_by = 2;
    // 发布单当前状态
    // @gotags: json:"status"
    Status status = 3;
}