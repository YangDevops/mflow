syntax = "proto3";

package infraboard.mflow.approval;
option go_package = "github.com/infraboard/mflow/apps/approval";

import "mcube/pb/resource/meta.proto";
import "mflow/apps/pipeline/pb/pipeline.proto";
import "mflow/apps/job/pb/job.proto";

message ApprovalSet {
    // 总数
    // @gotags: bson:"total" json:"total"
    int64 total = 1;
    // 列表
    // @gotags: bson:"items" json:"items"
    repeated Approval items = 2;
}

// 发布申请单
message Approval  {
    // 元信息
    // @gotags: bson:",inline" json:"meta"
    infraboard.mcube.resource.Meta meta = 1;
    // 创建信息
    // @gotags: bson:",inline" json:"spec"
    CreateApprovalRequest spec = 2;
    // 部署流水线配置
    // @gotags: bson:"-" json:"pipeline"
    pipeline.Pipeline pipeline = 7;
    // 发布单当前状态
    // @gotags: bson:"status" json:"status"
    Status status = 3;
}

// 创建发布申请
message CreateApprovalRequest {
    // 所属域
    // @gotags: bson:"domain" json:"domain" validate:"required"
    string domain = 1;
    // 所属空间
    // @gotags: bson:"namespace" json:"namespace" validate:"required"
    string namespace = 2;
    // 是否是模版
    // @gotags: bson:"is_template" json:"is_template"
    bool is_template = 3;
    // 模版id
    // @gotags: bson:"template_id" json:"template_id"
    bool template_id = 4;
    // 模版参数
    // @gotags: bson:"template_option" json:"template_option"
    TemplateOption template_option = 5;
    // 申请人
    // @gotags: bson:"create_by" json:"create_by" validate:"required"
    string create_by = 6;
    // 执行人列表, 申请通过后, 执行人负责流水线的执行
    // @gotags: bson:"operators" json:"operators"
    repeated string operators = 7;
    // 审核人列表
    // @gotags: bson:"auditors" json:"auditors"
    repeated string auditors = 8;
    // 申请单标题
    // @gotags: bson:"title" json:"title" validate:"required"
    string title = 9;
    // 申请说明, 支持Markdown
    // @gotags: bson:"describe" json:"describe" validate:"required"
    string describe = 10;
    // 审核通过后, 是否自动执行流水线, 默认审核通过后手动执行
    // @gotags: bson:"auto_run" json:"auto_run"
    bool auto_run = 11;
    // 是否创建Pipeline, 如果不是则关联pipeline
    // @gotags: bson:"is_create_pipeline" json:"is_create_pipeline"
    bool is_create_pipeline = 12;
    // 流水线配置, 创建申请单时, 动态创建流水线
    // @gotags: bson:"-" json:"pipeline_spec,omitempty"
    pipeline.CreatePipelineRequest pipeline_spec = 13;
    // 流水线Id, 关联的流水线Id
    // @gotags: bson:"pipeline_id" json:"pipeline_id"
    string pipeline_id = 14;
	// 运行时需要传递的参数
	// @gotags: bson:"run_params" json:"run_params"
	repeated job.RunParam run_params = 15;
	// 申请单标签
	// @gotags: bson:"labels" json:"labels"
	map<string, string> labels = 25;
}

message TemplateOption {
	// 是否允许编辑审核人
	// @gotags: bson:"allow_edit_auditors" json:"allow_edit_auditors"
    bool allow_edit_auditors = 1; 
}

enum STAGE {
    // 草稿
	DRAFT = 0;  
	// 待审核
	PENDDING = 1;
    // 已过期, 如果一直没审核, 多久后会过期
    EXPIRED = 2;
	// 审核拒绝
	DENY = 3;
	// 审核通过
	PASSED = 4;

	// 关闭, 执行成功后,验证没问题, 流程结束
	CLOSED = 15;
}

message Status {
    // 当前状态
    // @gotags: bson:"stage" json:"stage"
    STAGE stage = 1;
    // 审核人, 由于有多个可以审核的人, 需要知道谁审核通过的
    // @gotags: bson:"audit_by" json:"audit_by"
    string audit_by = 2;
    // 审核时间
    // @gotags: bson:"audit_at" json:"audit_at"
    int64 audit_at = 3;
    // 审核意见
    // @gotags: bson:"audit_comment" json:"audit_comment"
    string audit_comment = 4;
    // 发布关闭的时间
    // @gotags: bson:"close_at" json:"close_at"
    int64 close_at = 12;
    // 关闭备注
    // @gotags: bson:"close_comment" json:"close_comment"
    string close_comment = 13;
    // 通知记录
    // @gotags: bson:"notify_records" json:"notify_records"
    repeated NotifyRecord notify_records = 14;
	// 其他额外属性
	// @gotags: bson:"extra" json:"extra"
	map<string, string> extra = 15;
}

message NotifyRecord {
    // 那种状态的通知
    // @gotags: bson:"stage" json:"stage"
    STAGE stage = 1;
    // 通知时间
    // @gotags: bson:"notify_at" json:"notify_at"
    int64 notify_at = 2;
    // 是否通知成功
    // @gotags: bson:"is_success" json:"is_success"
    bool is_success = 3;
    // 通知失败的原因
    // @gotags: bson:"message" json:"message"
    string message = 4;
    // 具体详情, 通过成功后的响应数据, Debug使用
    // @gotags: bson:"detail" json:"detail"
    string detail = 5;
}